#pragma METAINFO("gyrotest", 1, 0, "beerSnobbery")

#include "safeprint.gph"
#include "rstick.gph"
#include "flickstick.gph"
#include "settings.gph"

fix32 lastAngle = 0.0;
fix32 lastMagnitude = 0.0;

fix32 flickYaw = 0.0;

fix32 normalizedAccX = 0.0;
fix32 normalizedAccY = 0.0;
fix32 normalizedAccZ = 0.0;

init {
	initConstants();
	
	if(booyahSwap){
		remapper_swap( BUTTON_7 , BUTTON_11 );
	}
	
	if(rumbleOff){
		ffb_set(FFB_1, 0.0, 100);
		ffb_set(FFB_2, 0.0, 100);
		ffb_set(FFB_3, 0.0, 100);
		ffb_set(FFB_4, 0.0, 100);
	}
	
}

main
{
	if(booyahTurbo){
		if(is_active(BUTTON_11)) combo_run(turboBooyah);
		if(event_release(BUTTON_11)) combo_stop(turboBooyah);
	}
	blockRightStick();
	
	fix32 accX = get_val(ACCEL_1_X);
	fix32 accY = get_val(ACCEL_1_Y);
	fix32 accZ = get_val(ACCEL_1_Z);
	fix32 accMag = sqrt(sq(accX) + sq(accY) + sq(accZ));
	
	normalizedAccX = -accX/accMag;
	normalizedAccY = -accY/accMag;
	normalizedAccZ = -accZ/accMag;
	
	
	uint32 dt = elapsed_time();
	
	//hack for now, if we can't tell how much time has elapsed
    //then we don't run the flickstick calc just use our previous value
	if(dt > 0) {
		fix32 angle = rightStickAngle();
		fix32 magnitude = rightStickMagnitude();
		
		fix32 flickAmount = handleFlickStick(lastAngle, lastMagnitude, angle, magnitude, dt);
		
		lastAngle = angle;
		lastMagnitude = magnitude;
	
		flickYaw = (flickAmount * flickMult);	  
	}
	
	//apply our flick based on the normalized accelerometer
	fix32 userGyroX = get_actual(GYRO_1_X) * gyroMult * naturalSensitivity;
	fix32 newX = userGyroX + (flickYaw * normalizedAccX);
	set_val(GYRO_1_X, newX);
	
	fix32 userGyroY = get_actual(GYRO_1_Y) * gyroMult * naturalSensitivity;
	fix32 newY = userGyroY + (flickYaw * normalizedAccY);
	set_val(GYRO_1_Y, newY);
	
	fix32 userGyroZ = get_actual(GYRO_1_Z) * gyroMult * naturalSensitivity;
	fix32 newZ = userGyroZ + (flickYaw * normalizedAccZ);
	set_val(GYRO_1_Z, newZ);
	
	//dumb 360 lol
	//if(event_active(BUTTON_15)){
	//	combo_run(Spin);
	//}
	
	//dumb bamboo 360 lol
	//if(event_release(BUTTON_5)){
	//	combo_run(ShootSpin);
	//}
}

combo turboBooyah
{
	set_val(BUTTON_11, 100);
	wait(40);
	set_val(BUTTON_11, 0);
	wait(40);
}

//do a 360 @ +5 sens
combo Spin 
{
	set_val(GYRO_1_X, normalizedAccX * 60.0);
	set_val(GYRO_1_Y, normalizedAccY * 60.0);
	set_val(GYRO_1_Z, normalizedAccZ * 60.0);
	wait(200);
}


combo ShootSpin 
{
	wait(20);
	set_val(GYRO_1_X, normalizedAccX * 60.0);
	set_val(GYRO_1_Y, normalizedAccY * 60.0);
	set_val(GYRO_1_Z, normalizedAccZ * 60.0);
	wait(100);
	set_val(BUTTON_5, 100.0);
	set_val(GYRO_1_X, normalizedAccX * 60.0);
	set_val(GYRO_1_Y, normalizedAccY * 60.0);
	set_val(GYRO_1_Z, normalizedAccZ * 60.0);
	wait(100);
	set_val(BUTTON_5, 100.0);
	wait(50);
	set_val(BUTTON_5, 0);
	wait(20);
}