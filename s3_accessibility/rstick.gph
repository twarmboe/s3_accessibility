#ifndef RSTICK_GPH_
#define RSTICK_GPH_

#include "safeprint.gph"
#include <switch.gph>


void blockRightStick()
{
	set_val(SWITCH_RX, 0.0);
	set_val(SWITCH_RY, 0.0);
}

// returns the angle of the right stick deflection from -pi to pi where 0 is 
// when the stick is pointed up
fix32 rightStickAngle() 
{
	fix32 rx, ry, angle;
	
	rx = get_actual(SWITCH_RX);
	ry = get_actual(SWITCH_RY);	
	
	angle = atan2(rx, -ry);
	angle = wrap(angle, -PI, PI);

	return angle;
}


// returns the magnitude of the right stick deflection from 0.0 to 100.0
fix32 rightStickMagnitude()
{
	fix32 rx, ry, magnitude;
	
	rx = get_actual(SWITCH_RX);
	ry = get_actual(SWITCH_RY);
	magnitude = sqrt(sq(rx) + sq(ry));

	return clamp(magnitude, 0.0, 100.0);
}


// find the smallest angle representation of the provided angle so for
// example 190 degrees would better be represented by -170 because we minimize
// the arc length
fix32 wrap(fix32 value, fix32 low, fix32 high)
{
	fix32 delta = high - low;
	return mod(value + low, delta) - low;
}




#endif
